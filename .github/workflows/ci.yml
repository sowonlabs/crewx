name: CI

on:
  pull_request:
    branches: [develop, main]
  push:
    branches: [develop]

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build SDK
        run: npm run build:sdk

      - name: Build CLI
        run: npm run build:cli

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm run test:ci

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  changeset-check:
    name: Changeset Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for changesets
        run: |
          if [ "$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -c '.changeset/')" -eq 0 ]; then
            echo "::warning::No changeset found. Please add a changeset if this PR includes changes that should be released."
          fi

  validate-packages:
    name: Validate Package Metadata
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Validate SDK package.json
        run: |
          cd packages/sdk
          npm pkg get license | grep -q "Apache-2.0"
          npm pkg get publishConfig.access | grep -q "public"

      - name: Validate CLI package.json
        run: |
          cd packages/cli
          npm pkg get license | grep -q "MIT"
          npm pkg get publishConfig.access | grep -q "public"

      - name: Check for required files
        run: |
          test -f packages/sdk/README.md || (echo "SDK README.md missing" && exit 1)
          test -f packages/sdk/LICENSE || (echo "SDK LICENSE missing" && exit 1)
          test -f packages/cli/README.md || (echo "CLI README.md missing" && exit 1)
